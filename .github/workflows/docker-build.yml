name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
  packages: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          
      - name: Check if prerelease
        id: check-prerelease
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          if [[ "$VERSION" == *"-beta"* || "$VERSION" == *"-alpha"* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Check branch for beta releases
        id: check-branch
        if: steps.check-prerelease.outputs.is_prerelease == 'true'
        run: |
          # Get the commit that the tag points to
          TAG_COMMIT=$(git rev-parse ${{ github.ref }})
          echo "Tag commit: $TAG_COMMIT"
          
          # Check if this commit is on the develop branch
          BRANCH_CONTAINS=$(git branch -r --contains $TAG_COMMIT | grep "origin/develop" || true)
          echo "Branch contains check: $BRANCH_CONTAINS"
          
          if [[ -n "$BRANCH_CONTAINS" ]]; then
            echo "is_valid_branch=true" >> $GITHUB_OUTPUT
            echo "Tag is on the develop branch"
          else
            echo "is_valid_branch=false" >> $GITHUB_OUTPUT
            echo "Beta releases should only be created from the develop branch"
            exit 1
          fi
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: |
            lakker/pulsarr
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=beta,enable=${{ steps.check-prerelease.outputs.is_prerelease == 'true' }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Note: TMDB API key is intentionally included in the image for user convenience
          # Users building from source should provide their own key
          build-args: |
            TMDBAPIKEY=${{ secrets.TMDBAPIKEY }}
          cache-from: |
            type=gha,scope=buildkit
          cache-to: |
            type=gha,mode=max,scope=buildkit

      - name: Generate Release Notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6
        id: release-drafter
        with:
          config-name: release-drafter.yml
          tag: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          body: ${{ steps.release-drafter.outputs.body }}
          draft: true
          prerelease: ${{ steps.check-prerelease.outputs.is_prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}