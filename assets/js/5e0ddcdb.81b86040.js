"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[3848],{89470:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"utilities/session-monitoring","title":"Plex Session Monitoring","description":"Automatically searches for upcoming episodes and seasons by monitoring what users are currently watching. When someone nears the end of a season, Pulsarr proactively downloads the next content.","source":"@site/docs/utilities/session-monitoring.md","sourceDirName":"utilities","slug":"/utilities/session-monitoring","permalink":"/Pulsarr/docs/utilities/session-monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/utilities/session-monitoring.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"User Tagging","permalink":"/Pulsarr/docs/utilities/user-tagging"},"next":{"title":"Plex Notifications","permalink":"/Pulsarr/docs/utilities/plex-notifications"}}');var t=e(74848),o=e(28453),r=e(76813);const l={sidebar_position:4},a="Plex Session Monitoring",c={},d=[{value:"How It Works",id:"how-it-works",level:2},{value:"Rolling Monitoring",id:"rolling-monitoring",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Basic Settings",id:"basic-settings",level:3},{value:"Cleanup Settings",id:"cleanup-settings",level:3},{value:"Rolling Monitoring Status",id:"rolling-monitoring-status",level:2},{value:"Active Shows",id:"active-shows",level:3},{value:"Action Buttons (Master Records Only)",id:"action-buttons-master-records-only",level:3},{value:"Inactive Shows",id:"inactive-shows",level:3},{value:"Manual Actions",id:"manual-actions",level:3},{value:"Setup in Sonarr",id:"setup-in-sonarr",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Attribution",id:"attribution",level:2}];function h(n){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"plex-session-monitoring",children:"Plex Session Monitoring"})}),"\n",(0,t.jsx)(i.p,{children:"Automatically searches for upcoming episodes and seasons by monitoring what users are currently watching. When someone nears the end of a season, Pulsarr proactively downloads the next content."}),"\n",(0,t.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Monitors active Plex sessions"})," via polling (configurable interval)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Calculates remaining episodes"})," in the current season"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Triggers searches"})," when users reach a threshold (e.g., 2 episodes remaining)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Handles next seasons"})," automatically or via rolling monitoring"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"rolling-monitoring",children:"Rolling Monitoring"}),"\n",(0,t.jsx)(i.p,{children:"Progressive downloading strategy that starts minimal and expands based on viewing activity, with automatic cleanup when shows are abandoned:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Pilot Rolling"}),": Start with pilot only \u2192 expand to full season when watched \u2192 add seasons progressively"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"First Season Rolling"}),": Start with Season 1 \u2192 add Season 2 when nearing completion \u2192 continue expanding"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Auto-cleanup"}),": Automatically reverts shows to original monitoring states when nobody is watching"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Best for"}),": Testing user interest and managing storage efficiently"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(i.p,{children:["Navigate to ",(0,t.jsx)(i.strong,{children:"Utilities > Plex Session Monitoring"}),":"]}),"\n",(0,t.jsx)(i.h3,{id:"basic-settings",children:"Basic Settings"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Enable Session Monitoring"}),": Toggle the feature on/off"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Polling Interval"}),": How often to check for active sessions (default: 15 minutes)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Episode Threshold"}),": When to trigger searches (default: 2 episodes remaining)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Filter Users"}),": Optionally monitor only specific users"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"cleanup-settings",children:"Cleanup Settings"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Automatic Reset"}),": Reset abandoned shows to original state after inactivity period"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Progressive Cleanup"}),": Remove previous seasons as users advance, but only if no other users have watched those seasons within the inactivity period"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Inactivity Reset Days"}),": Days to wait before considering content inactive for cleanup (default: 7 days)"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"rolling-monitoring-status",children:"Rolling Monitoring Status"}),"\n",(0,t.jsx)(i.p,{children:"The interface provides real-time management of tracked shows:"}),"\n",(0,t.jsx)(i.h3,{id:"active-shows",children:"Active Shows"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"View button"}),": Displays all rolling monitored shows including master records and user tracking entries"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Master records"}),": Have action buttons for management (shows without specific user)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"User tracking entries"}),': Display "Tracking only" status']}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"action-buttons-master-records-only",children:"Action Buttons (Master Records Only)"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Reset"}),": Reverts show to original monitoring state and removes all user tracking entries"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Delete"}),": Removes show from monitoring entirely, leaving current content in place"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"inactive-shows",children:"Inactive Shows"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Shows"}),": Haven't been watched within the configured inactivity period (default: 7 days)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Based on"}),": ",(0,t.jsx)(i.code,{children:"last_updated_at"})," field compared to inactivity threshold"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"View button"}),": Opens read-only table (no action buttons) showing shows eligible for reset"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Reset button"}),": Only appears when inactive shows exist - bulk resets all inactive shows"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"manual-actions",children:"Manual Actions"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Check Sessions"}),": Button in header - manually triggers session monitoring without waiting for polling interval"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Reset All Inactive"}),": Button only appears in the Inactive section when there are inactive shows (\u27f2 icon)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"View buttons"}),": Open detailed sheets showing all shows with management options"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"setup-in-sonarr",children:"Setup in Sonarr"}),"\n",(0,t.jsx)(i.p,{children:"Rolling monitoring options appear in:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Sonarr Instance Settings"}),": Set default rolling behavior for all content"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Content Router Rules"}),": Apply rolling monitoring to specific content based on conditions"]}),"\n"]}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsx)(i.p,{children:"Rolling monitoring options only appear when Session Monitoring is enabled."})}),"\n",(0,t.jsx)("img",{src:(0,r.default)("/img/Plex-Session-Monitoring.png"),alt:"Plex Session Monitoring Configuration Interface"}),"\n",(0,t.jsx)(i.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Sessions not detected"}),": Check Plex connection and polling interval"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Searches not triggering"}),": Verify series exists in Sonarr with matching metadata"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Rolling monitoring issues"}),": Ensure Session Monitoring is enabled and content was added with rolling options"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"attribution",children:"Attribution"}),"\n",(0,t.jsxs)(i.p,{children:["Inspired by ",(0,t.jsx)(i.a,{href:"https://github.com/p-hueber/prefetcharr",children:"prefetcharr"})," by p-hueber."]})]})}function g(n={}){const{wrapper:i}={...(0,o.R)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}}}]);