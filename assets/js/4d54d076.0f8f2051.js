"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[459],{4753:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"contributing","title":"Contributing","description":"We welcome contributions to Pulsarr! This section outlines the process for contributing to the project.","source":"@site/docs/contributing.md","sourceDirName":".","slug":"/contributing","permalink":"/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/contributing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/architecture"}}');var i=s(4848),t=s(8453);const o={sidebar_position:7},l="Contributing",c={},d=[{value:"Fork and Branch Naming",id:"fork-and-branch-naming",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Pull Request Guidelines",id:"pull-request-guidelines",level:2},{value:"Questions?",id:"questions",level:2},{value:"Contributors",id:"contributors",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,i.jsx)(n.p,{children:"We welcome contributions to Pulsarr! This section outlines the process for contributing to the project."}),"\n",(0,i.jsx)(n.h2,{id:"fork-and-branch-naming",children:"Fork and Branch Naming"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Fork the Repository"}),": Start by forking the Pulsarr repository to your GitHub account."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Branch Naming Conventions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For new features: ",(0,i.jsx)(n.code,{children:"features/your-feature-name"})]}),"\n",(0,i.jsxs)(n.li,{children:["For bug fixes: ",(0,i.jsx)(n.code,{children:"bug-fix/brief-bug-description"})]}),"\n",(0,i.jsxs)(n.li,{children:["For documentation: ",(0,i.jsx)(n.code,{children:"docs/what-you-are-documenting"})]}),"\n",(0,i.jsxs)(n.li,{children:["For performance improvements: ",(0,i.jsx)(n.code,{children:"perf/what-you-are-improving"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Create a Branch"}),": Create a new branch following the naming conventions above."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Make Your Changes"}),": Implement your feature or fix the bug."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write Tests"}),": If applicable, write tests for your changes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ensure Code Quality"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run linting tools (npm run fix to run biome)"}),"\n",(0,i.jsx)(n.li,{children:"Ensure tests pass (these are coming!)"}),"\n",(0,i.jsx)(n.li,{children:"Follow the existing code style"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Commit Your Changes"}),": Use clear, descriptive commit messages."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Push to Your Fork"}),": Push your changes to your forked repository."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Submit a Pull Request"}),": Create a pull request from your branch to the develop branch of the main Pulsarr repository."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pull-request-guidelines",children:"Pull Request Guidelines"}),"\n",(0,i.jsx)(n.p,{children:"When submitting a pull request, please:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Describe Your Changes"}),": Provide a clear description of what the changes accomplish."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Link Related Issues"}),': If your PR addresses an open issue, reference it using the GitHub issue linking syntax (e.g., "Fixes #123").']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Include Screenshots"}),": If your changes include visual elements, add screenshots to help reviewers understand the context."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Update Documentation"}),": Ensure that documentation is updated to reflect your changes if necessary."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Be Responsive"}),": Be prepared to address feedback and make requested changes."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"questions",children:"Questions?"}),"\n",(0,i.jsxs)(n.p,{children:["If you have any questions about contributing, feel free to ",(0,i.jsx)(n.a,{href:"https://github.com/jamcalli/pulsarr/issues",children:"open an issue"}),' with the label "question".']}),"\n",(0,i.jsx)(n.h2,{id:"contributors",children:"Contributors"}),"\n",(0,i.jsxs)(n.p,{children:["See all ",(0,i.jsx)(n.a,{href:"https://github.com/jamcalli/pulsarr/graphs/contributors",children:"contributors"})]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);