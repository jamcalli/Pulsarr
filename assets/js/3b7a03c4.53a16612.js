"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[4537],{60475:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"features/content-routing","title":"Advanced Content Routing","description":"Intelligently direct content to the appropriate Sonarr/Radarr instances using powerful predicate-based routing rules.","source":"@site/docs/features/content-routing.md","sourceDirName":"features","slug":"/features/content-routing","permalink":"/Pulsarr/docs/features/content-routing","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/features/content-routing.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Migrating from SQLite to PostgreSQL","permalink":"/Pulsarr/docs/installation/postgres-migration"},"next":{"title":"Multi-Instance Support","permalink":"/Pulsarr/docs/features/multi-instance-support"}}');var r=i(74848),t=i(28453),l=i(41306);const o={sidebar_position:1},c="Advanced Content Routing",a={},d=[{value:"Key Features",id:"key-features",level:2},{value:"Automatic Anime Detection",id:"automatic-anime-detection",level:2},{value:"Creating Rules",id:"creating-rules",level:2},{value:"Instance Configuration Overrides",id:"instance-configuration-overrides",level:2},{value:"Sonarr Overrides",id:"sonarr-overrides",level:3},{value:"Radarr Overrides",id:"radarr-overrides",level:3},{value:"Routing Conditions",id:"routing-conditions",level:3},{value:"Multi-Instance Routing",id:"multi-instance-routing",level:2},{value:"Rule Processing",id:"rule-processing",level:2},{value:"Example Rules",id:"example-rules",level:2},{value:"Best Practices",id:"best-practices",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced-content-routing",children:"Advanced Content Routing"})}),"\n",(0,r.jsx)(n.p,{children:"Intelligently direct content to the appropriate Sonarr/Radarr instances using powerful predicate-based routing rules."}),"\n",(0,r.jsx)(n.admonition,{title:"Migration Note",type:"info",children:(0,r.jsx)(n.p,{children:"If you're upgrading from a version prior to 0.2.15, you may need to delete and recreate your content routes if you experience routing issues."})}),"\n",(0,r.jsx)("img",{src:(0,l.default)("/img/Content-Route-1.png"),alt:"Content Router Interface"}),"\n",(0,r.jsx)("img",{src:(0,l.default)("/img/Content-Route-2.png"),alt:"Content Router Advanced Interface"}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Conditional Logic"}),": Complex decision trees with AND/OR operators, nested condition groups, and priority-based processing."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Routing Criteria"}),": Route content based on genre, user, language, year, certification, or season count."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Multi-Instance Support"}),": Send content to multiple instances simultaneously with different configurations."]}),"\n",(0,r.jsx)(n.h2,{id:"automatic-anime-detection",children:"Automatic Anime Detection"}),"\n",(0,r.jsx)(n.p,{children:"Pulsarr automatically detects anime content to enable targeted routing and processing. When content is processed through the Content Router, it checks external IDs (TVDB, TMDB, IMDb) against a comprehensive anime database."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Downloads anime database from the ",(0,r.jsx)(n.a,{href:"https://github.com/Anime-Lists/anime-lists",children:"anime-lists repository"})]}),"\n",(0,r.jsxs)(n.li,{children:["Updates automatically every ",(0,r.jsx)(n.strong,{children:"Sunday at 3 AM"})]}),"\n",(0,r.jsx)(n.li,{children:"Matches content IDs against anime database entries"}),"\n",(0,r.jsx)(n.li,{children:'Automatically adds "anime" to content genres when matched'}),"\n",(0,r.jsxs)(n.li,{children:["Enables anime-specific routing rules (e.g., ",(0,r.jsx)(n.code,{children:'genre contains "Anime"'}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Sources:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Primary"}),": anime-list-full.xml from anime-lists GitHub repository"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Supported IDs"}),": TVDB, TMDB, IMDb external identifiers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Schedule"}),": Weekly automatic updates (Sundays at 3 AM)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This seamless detection allows you to create routing rules like ",(0,r.jsx)(n.code,{children:'IF genre contains "Anime"'})," without manually tagging content, as the system automatically identifies and classifies anime for you."]}),"\n",(0,r.jsx)(n.h2,{id:"creating-rules",children:"Creating Rules"}),"\n",(0,r.jsx)(n.p,{children:"Each rule consists of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conditions"}),': Genre contains "Anime", User equals "KidsAccount", etc.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Target Instance"}),": Which Sonarr/Radarr instance receives the content"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Instance Settings"}),": Quality profile, root folder, monitoring options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Priority"}),": Higher priority rules take precedence"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"instance-configuration-overrides",children:"Instance Configuration Overrides"}),"\n",(0,r.jsx)(n.p,{children:"When creating routing rules, you can override these instance settings:"}),"\n",(0,r.jsx)(n.h3,{id:"sonarr-overrides",children:"Sonarr Overrides"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Core Settings:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quality Profile"}),": Override default quality profile"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Root Folder"}),": Route to specific folder path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tags"}),": Apply specific tags for organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search on Add"}),": Automatically search when added"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Series Settings:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Series Type"}),": Override series type (",(0,r.jsx)(n.code,{children:"standard"}),", ",(0,r.jsx)(n.code,{children:"anime"}),", ",(0,r.jsx)(n.code,{children:"daily"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Season Monitoring"}),": Override monitoring strategy:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"all"})," - All Seasons"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"future"})," - Future Seasons"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"missing"})," - Missing Episodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"existing"})," - Existing Episodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"firstSeason"})," - First Season"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lastSeason"})," - Last Season"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"latestSeason"})," - Latest Season"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pilot"})," - Pilot Only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pilotRolling"})," - Pilot Rolling (Auto-expand, requires session monitoring)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"firstSeasonRolling"})," - First Season Rolling (Auto-expand, requires session monitoring)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recent"})," - Recent Episodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"monitorSpecials"})," - Monitor Specials"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unmonitorSpecials"})," - Unmonitor Specials"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"none"})," - None"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skip"})," - Skip"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"radarr-overrides",children:"Radarr Overrides"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Core Settings:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quality Profile"}),": Override default quality profile"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Root Folder"}),": Route to specific folder path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tags"}),": Apply specific tags for organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search on Add"}),": Automatically search when added"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"routing-conditions",children:"Routing Conditions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Available Fields:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Genres"}),": Content genre categories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User"}),": User ID or username"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Year"}),": Release year"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Certification"}),": Content rating (PG-13, R, TV-MA, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Original Language"}),": Original language of content"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Season"}),": Season number (Sonarr only)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"multi-instance-routing",children:"Multi-Instance Routing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Multiple Instance Support"}),": Content router rules can send the same content to multiple instances simultaneously. For example:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Anime Rule 1 \u2192 Anime-Sonarr-HD (priority 100)"}),"\n",(0,r.jsx)(n.li,{children:"Anime Rule 2 \u2192 Anime-Sonarr-4K (priority 90)"}),"\n",(0,r.jsx)(n.li,{children:"Both rules fire for anime content, sending it to both instances with their respective configurations"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Priority Evaluation"}),": Priorities only matter when multiple rules target the ",(0,r.jsx)(n.em,{children:"same"})," instance - highest priority rule wins and applies its settings (quality profile, root folder, etc.)."]}),"\n",(0,r.jsxs)(n.p,{children:["For comprehensive multi-instance synchronization and distribution features, see ",(0,r.jsx)(n.a,{href:"multi-instance-support",children:"Multi-Instance Support"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"rule-processing",children:"Rule Processing"}),"\n",(0,r.jsx)(n.p,{children:"When content is added to a watchlist:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"All routing rules are evaluated in priority order"}),"\n",(0,r.jsx)(n.li,{children:"Content is sent to all matching instances (multiple instances supported)"}),"\n",(0,r.jsx)(n.li,{children:"For multiple rules targeting the same instance, highest priority wins"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-rules",children:"Example Rules"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Anime Routing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'IF genre contains "Anime" \nTHEN route to "Anime-Sonarr" with "HD-1080p" profile\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"User-based Routing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'IF user equals "KidsAccount"\nTHEN route to "Family-Sonarr" with "Family" profile in "/kids" folder\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Year-based Routing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'IF year is less than 2000\nTHEN route to "Classics-Radarr" with "Archive" profile\n'})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use higher priorities (90-100) for specific rules"}),"\n",(0,r.jsx)(n.li,{children:"Start with simple rules before adding complexity"}),"\n",(0,r.jsx)(n.li,{children:"Review logs if content isn't routing as expected"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);