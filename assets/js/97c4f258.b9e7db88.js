"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[1057],{76402:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"installation/configuration","title":"Configuration","description":"Pulsarr uses a hybrid configuration approach. Core application settings (like port, URL, logging) must be defined in a .env file, while application-specific settings are configured through the web UI after installation.","source":"@site/docs/installation/configuration.md","sourceDirName":"installation","slug":"/installation/configuration","permalink":"/Pulsarr/docs/installation/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/installation/configuration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start Guide","permalink":"/Pulsarr/docs/installation/quick-start"},"next":{"title":"Advanced Content Routing","permalink":"/Pulsarr/docs/features/content-routing"}}');var t=r(74848),s=r(28453);const o={sidebar_position:2},l="Configuration",a={},d=[{value:"Core Configuration",id:"core-configuration",level:2},{value:"Database Configuration",id:"database-configuration",level:2},{value:"SQLite (Default)",id:"sqlite-default",level:3},{value:"PostgreSQL",id:"postgresql",level:3},{value:"Example .env File",id:"example-env-file",level:2},{value:"SQLite Configuration (Default)",id:"sqlite-configuration-default",level:3},{value:"PostgreSQL Configuration",id:"postgresql-configuration",level:3},{value:"Authentication Configuration",id:"authentication-configuration",level:2},{value:"Complete Development Configuration",id:"complete-development-configuration",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["Pulsarr uses a hybrid configuration approach. Core application settings (like port, URL, logging) must be defined in a ",(0,t.jsx)(n.code,{children:".env"})," file, while application-specific settings are configured through the web UI after installation."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:".env"})," file is required for the initial setup and contains essential configuration values. Any values set in the ",(0,t.jsx)(n.code,{children:".env"})," file will override settings stored in the database, giving you flexibility to customize your deployment."]}),"\n",(0,t.jsx)(n.admonition,{title:"About Apprise",type:"note",children:(0,t.jsxs)(n.p,{children:["If you're using the Apprise integration, additional configuration values like ",(0,t.jsx)(n.code,{children:"appriseUrl"})," should be included in your ",(0,t.jsx)(n.code,{children:".env"})," file. These values are only needed if you're running the Apprise container alongside Pulsarr."]})}),"\n",(0,t.jsx)(n.h2,{id:"core-configuration",children:"Core Configuration"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required?"}),(0,t.jsx)(n.th,{children:"Default"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"baseUrl"})}),(0,t.jsxs)(n.td,{children:["Base URL where Pulsarr can be reached by Sonarr/Radarr (e.g., ",(0,t.jsx)(n.code,{children:"http://pulsarr"})," for Docker network or ",(0,t.jsx)(n.code,{children:"http://your-server-ip"}),")"]}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"http://localhost"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"port"})}),(0,t.jsx)(n.td,{children:"Port where Pulsarr is accessible - works with baseUrl to form complete address"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"3003"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TZ"})}),(0,t.jsx)(n.td,{children:"Your local timezone (e.g., America/New_York, Europe/London)"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"UTC"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"logLevel"})}),(0,t.jsx)(n.td,{children:"Logging level (silent, error, warn, info, debug, trace)"}),(0,t.jsx)(n.td,{children:"Recommended"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"silent"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"NODE_ARGS"})}),(0,t.jsxs)(n.td,{children:["Logger configuration for Docker (",(0,t.jsx)(n.code,{children:"--log-both"})," recommended for most users)"]}),(0,t.jsx)(n.td,{children:"Recommended"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"--log-file"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"cookieSecured"})}),(0,t.jsx)(n.td,{children:"Set to true ONLY if serving UI over HTTPS"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"appriseUrl"})}),(0,t.jsx)(n.td,{children:"URL for the Apprise server (only if using Apprise)"}),(0,t.jsx)(n.td,{children:"No*"}),(0,t.jsx)(n.td,{children:"None"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"*Required only if you're using the Apprise integration."}),"\n",(0,t.jsx)(n.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Pulsarr supports both SQLite (default) and PostgreSQL databases:"}),"\n",(0,t.jsx)(n.h3,{id:"sqlite-default",children:"SQLite (Default)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required?"}),(0,t.jsx)(n.th,{children:"Default"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbPath"})}),(0,t.jsx)(n.td,{children:"Path to SQLite database file"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"./data/db/pulsarr.db"})})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,t.jsx)(n.admonition,{title:"Migration Available",type:"note",children:(0,t.jsxs)(n.p,{children:["PostgreSQL is supported for both new installations and migrations from existing SQLite databases. If you're already using Pulsarr with SQLite, see the ",(0,t.jsx)(n.a,{href:"./postgres-migration",children:"PostgreSQL Migration Guide"})," for step-by-step instructions on migrating your data."]})}),"\n",(0,t.jsxs)(n.admonition,{title:"Database Setup Required",type:"note",children:[(0,t.jsx)(n.p,{children:"Before configuring Pulsarr with PostgreSQL, ensure you have:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A PostgreSQL server running"}),"\n",(0,t.jsxs)(n.li,{children:["Created a database for Pulsarr (e.g., ",(0,t.jsx)(n.code,{children:"CREATE DATABASE pulsarr;"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Created a user with appropriate permissions (e.g., ",(0,t.jsx)(n.code,{children:"CREATE USER pulsarr WITH PASSWORD 'your_password';"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Granted database access (e.g., ",(0,t.jsx)(n.code,{children:"GRANT ALL PRIVILEGES ON DATABASE pulsarr TO pulsarr;"}),")"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required?"}),(0,t.jsx)(n.th,{children:"Default"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbType"})}),(0,t.jsxs)(n.td,{children:["Database type - set to ",(0,t.jsx)(n.code,{children:"postgres"})," to enable PostgreSQL"]}),(0,t.jsx)(n.td,{children:"Yes (for PostgreSQL)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sqlite"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbHost"})}),(0,t.jsx)(n.td,{children:"PostgreSQL server hostname or IP"}),(0,t.jsx)(n.td,{children:"Yes (for PostgreSQL)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"localhost"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbPort"})}),(0,t.jsx)(n.td,{children:"PostgreSQL server port"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"5432"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbName"})}),(0,t.jsx)(n.td,{children:"PostgreSQL database name"}),(0,t.jsx)(n.td,{children:"Yes (for PostgreSQL)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pulsarr"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbUser"})}),(0,t.jsx)(n.td,{children:"PostgreSQL username"}),(0,t.jsx)(n.td,{children:"Yes (for PostgreSQL)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"postgres"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbPassword"})}),(0,t.jsx)(n.td,{children:"PostgreSQL password"}),(0,t.jsx)(n.td,{children:"Yes (for PostgreSQL)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pulsarrpostgrespw"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dbConnectionString"})}),(0,t.jsx)(n.td,{children:"Full PostgreSQL connection string (takes priority over individual settings)"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"``"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example-env-file",children:"Example .env File"}),"\n",(0,t.jsx)(n.p,{children:"Here is how your .env should look:"}),"\n",(0,t.jsx)(n.h3,{id:"sqlite-configuration-default",children:"SQLite Configuration (Default)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Required settings\nbaseUrl=http://your-server-ip   # Address where Pulsarr can be reached by Sonarr/Radarr\nport=3003                       # Port where Pulsarr is accessible\nTZ=America/Los_Angeles          # Set to your local timezone\n\n# Recommended settings\nlogLevel=info                   # Default is 'silent', but 'info' is recommended\nNODE_ARGS=--log-both            # Default logs to file only, '--log-both' shows logs in terminal too\n\n# Optional settings\ncookieSecured=false             # Set to 'true' ONLY if serving UI over HTTPS\ndbPath=./data/db/pulsarr.db     # SQLite database path (optional, this is default)\n\n# Only needed if using Apprise\n# appriseUrl=http://apprise:8000  # URL to your Apprise container\n"})}),"\n",(0,t.jsx)(n.h3,{id:"postgresql-configuration",children:"PostgreSQL Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Required settings\nbaseUrl=http://your-server-ip   # Address where Pulsarr can be reached by Sonarr/Radarr\nport=3003                       # Port where Pulsarr is accessible\nTZ=America/Los_Angeles          # Set to your local timezone\n\n# Recommended settings\nlogLevel=info                   # Default is 'silent', but 'info' is recommended\nNODE_ARGS=--log-both            # Default logs to file only, '--log-both' shows logs in terminal too\n\n# PostgreSQL Database Configuration\ndbType=postgres                 # Enable PostgreSQL support\ndbHost=your-postgres-host       # PostgreSQL server hostname or IP\ndbPort=5432                     # PostgreSQL server port (optional, defaults to 5432)\ndbName=pulsarr                  # PostgreSQL database name\ndbUser=pulsarr                  # PostgreSQL username\ndbPassword=your-secure-password # PostgreSQL password\n# dbConnectionString=postgresql://user:pass@host:port/database  # Alternative: connection string (takes priority)\n\n# Optional settings\ncookieSecured=false             # Set to 'true' ONLY if serving UI over HTTPS\n\n# Only needed if using Apprise\n# appriseUrl=http://apprise:8000  # URL to your Apprise container\n"})}),"\n",(0,t.jsxs)(n.admonition,{title:"NODE_ARGS Options",type:"info",children:[(0,t.jsx)(n.p,{children:"Controls logging behavior in Docker. Options are:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--log-terminal"})," - Log to terminal only"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--log-file"})," - Log to file only (default)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--log-both"})," - Log to both terminal and file"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Pulsarr supports configurable authentication options:"}),"\n",(0,t.jsxs)(n.p,{children:["Set the environment variable ",(0,t.jsx)(n.code,{children:"authenticationMethod"})," in your ",(0,t.jsx)(n.code,{children:".env"})," file to one of these values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"required"})," - Authentication is always required (default)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"requiredExceptLocal"})," - Authentication is required except for local addresses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"disabled"})," - Authentication is completely disabled"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When using ",(0,t.jsx)(n.code,{children:"requiredExceptLocal"}),", connections from the following private IP ranges will bypass authentication:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"127.0.0.0/8 (localhost)"}),"\n",(0,t.jsx)(n.li,{children:"10.0.0.0/8 (private network)"}),"\n",(0,t.jsx)(n.li,{children:"172.16.0.0/12 (private network)"}),"\n",(0,t.jsx)(n.li,{children:"192.168.0.0/16 (private network)"}),"\n",(0,t.jsx)(n.li,{children:"169.254.0.0/16 (link-local)"}),"\n",(0,t.jsx)(n.li,{children:"::1/128 (IPv6 localhost)"}),"\n",(0,t.jsx)(n.li,{children:"fc00::/7 (IPv6 unique local addresses)"}),"\n",(0,t.jsx)(n.li,{children:"fe80::/10 (IPv6 link-local addresses)"}),"\n",(0,t.jsxs)(n.li,{children:["::ffff",":x",".x.x.x (IPv4-mapped IPv6 addresses)"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"Restart Required",type:"warning",children:(0,t.jsxs)(n.p,{children:["After changing this setting in your ",(0,t.jsx)(n.code,{children:".env"})," file, you need to restart the container for it to take effect."]})}),"\n",(0,t.jsx)(n.h2,{id:"complete-development-configuration",children:"Complete Development Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Below is an example of a complete development environment configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Server Configuration\nbaseUrl=http://x.x.x.x                 # Local network address\nport=3003                              # Application port\ndbPath=./data/db/pulsarr.db            # SQLite database location (only used when dbType is not set)\n\n# PostgreSQL Configuration (optional - uncomment to use PostgreSQL instead of SQLite)\n# dbType=postgres                      # Database type: 'postgres' or leave unset for SQLite\n# dbHost=your-postgres-host            # PostgreSQL server hostname or IP\n# dbPort=5432                          # PostgreSQL server port (optional, defaults to 5432)\n# dbName=pulsarr                       # PostgreSQL database name\n# dbUser=pulsarr                       # PostgreSQL username\n# dbPassword=your-secure-password      # PostgreSQL password\n# dbConnectionString=                  # Alternative: PostgreSQL connection string (takes priority over individual settings)\ncookieSecret=xxxxxxxxxxxxxxxxxxxxxxxx  # Secret key for cookies (randomly generated by default)\ncookieName=pulsarr                     # Name of the cookie\ncookieSecured=false                    # Set to true for HTTPS only\nlogLevel=info                          # Logging level (defaults to silent. Recommended: info)\nauthenticationMethod=required          # Authentication method (required, requiredExceptLocal, disabled)\ncloseGraceDelay=10000                  # Shutdown grace period in ms\nrateLimitMax=500                       # Max requests per time window\nsyncIntervalSeconds=10                 # Sync interval in seconds\nqueueProcessDelaySeconds=60            # Queue processing delay in seconds\n\n# Notification Queue Settings\npendingWebhookRetryInterval=20         # Retry interval for pending notifications in seconds\npendingWebhookMaxAge=10                # Max age for pending notifications in minutes\npendingWebhookCleanupInterval=60       # Cleanup interval for old notifications in minutes\n\n# Discord Configuration\ndiscordWebhookUrl=https://discord.com/api/webhooks/xxxx/xxxx  # Webhook URL(s), separate multiple with commas\ndiscordBotToken=xxxx.xxxx.xxxx                                # Bot token\ndiscordClientId=xxxxxxxxxxxx                                  # Client ID\ndiscordGuildId=xxxxxxxxxxxx                                   # Server ID\n\n# Apprise Configuration\nappriseUrl=http://x.x.x.x:8000         # URL for the Apprise server (e.g., http://apprise:8000 for Docker networking)\nenableApprise=true                     # This is auto set by Pulsarr based on the availability of the Apprise server\nsystemAppriseUrl=                      # Apprise URL for system notifications only\n\n# General Notifications\nqueueWaitTime=120000                   # Queue wait time in ms\nnewEpisodeThreshold=172800000          # New episode threshold in ms (48h)\nupgradeBufferTime=2000                 # Buffer time between upgrades in ms\n\n# Tautulli Configuration\ntautulliEnabled=false                  # Enable Tautulli integration (requires Plex Pass)\ntautulliUrl=http://x.x.x.x:8181        # Tautulli server URL\ntautulliApiKey=xxxxxxxxxxxxxxxxxxxxxxxx # Tautulli API key\n\n# Sonarr Configuration (these will seed a single instance. Needs all the values. Only use in dev.)\nsonarrBaseUrl=http://x.x.x.x:8989      # Sonarr instance URL\nsonarrApiKey=xxxxxxxxxxxxxxxxxxxxxxxx  # Sonarr API key\nsonarrQualityProfile=                  # Quality profile name (empty = default. Also accepts name or number)\nsonarrRootFolder=                      # Root folder path (empty = default. Or accepts string of the path url)\nsonarrLanguageProfileId=1              # Language profile ID\nsonarrBypassIgnored=false              # Bypass ignored setting\nsonarrSeasonMonitoring=all             # Season monitoring strategy\nsonarrMonitorNewItems=all              # Monitor strategy for new items ('all' or 'none')\nsonarrTags=[]                          # Tags as JSON array\nsonarrSeriesType=standard              # Series type: 'standard', 'anime', or 'daily'\n\n# Radarr Configuration (these will seed a single instance. Needs all the values. Only use in dev.)\nradarrBaseUrl=http://x.x.x.x:7878      # Radarr instance URL\nradarrApiKey=xxxxxxxxxxxxxxxxxxxxxxxx  # Radarr API key\nradarrQualityProfile=                  # Quality profile name (empty = default. Also accepts name or number)\nradarrRootFolder=                      # Root folder path (empty = default. Or accepts string of the path url)\nradarrLanguageProfileId=1              # Language profile ID\nradarrBypassIgnored=false              # Bypass ignored setting\nradarrTags=[]                          # Tags as JSON array\n\n# Plex Configuration\nplexTokens=[\"xxxxxxxxxxxxxxxxxxxx\"]    # Plex authentication token\nskipFriendSync=false                   # Skip syncing Plex friends\nenablePlexPlaylistProtection=false     # Enable playlist protection feature\nplexProtectionPlaylistName=\"Do Not Delete\"  # Name of protection playlist\nplexServerUrl=http://localhost:32400   # Plex server URL (optional, can be auto-detected)\n\n# User Tagging Configuration\ntagUsersInSonarr=false                 # Enable automatic user tagging in Sonarr\ntagUsersInRadarr=false                 # Enable automatic user tagging in Radarr\ntagPrefix=pulsarr:user                 # Prefix for user tags - required alphanumeric, dash, underscore, colon, period only\npersistHistoricalTags=true             # DEPRECATED: Use removedTagMode instead (keeps for backward compatibility)\ncleanupOrphanedTags=true               # When true, removes tags for deleted users during sync\nremovedTagMode=remove                  # How to handle tags when content is removed: 'keep', 'remove', or 'prefix'\nremovedTagPrefix=pulsarr:removed       # Prefix for removal tags when using 'prefix' mode\ndeletionMode=watchlist                 # Deletion workflow mode: 'watchlist' or 'tag-based'\n\n# Delete Configuration\ndeleteMovie=false                      # Auto-delete movies setting\ndeleteEndedShow=false                  # Auto-delete ended shows setting\ndeleteContinuingShow=false             # Auto-delete continuing shows setting\ndeleteFiles=true                       # Delete files from disk setting\nrespectUserSyncSetting=true            # Only delete content from users with sync enabled\ndeleteSyncNotify=none                  # Notify of delete sync status: 'none' | 'message' | 'webhook' | 'both' | 'all' | 'discord-only' | 'apprise-only'\ndeleteSyncNotifyOnlyOnDeletion=false   # Only send notifications when items are actually deleted\nmaxDeletionPrevention=10               # Safeguard to prevent mass deletion. % of total library to allow during delete sync\n\n# Plex Session Monitoring\nplexSessionMonitoring='{\"enabled\":false,\"pollingIntervalMinutes\":15,\"remainingEpisodes\":2,\"filterUsers\":[],\"enableAutoReset\":true,\"inactivityResetDays\":7,\"autoResetIntervalHours\":24}'  # JSON config for session monitoring\n# Session monitoring configuration (JSON format):\n# - enabled: Enable/disable session monitoring (default: false)\n# - pollingIntervalMinutes: How often to check sessions in minutes (default: 15, range: 1-1440)\n# - remainingEpisodes: Episodes remaining before triggering search (default: 2, range: 1-10)\n# - filterUsers: Array of usernames to monitor, empty for all users (default: [])\n# - enableAutoReset: Enable automatic reset of inactive shows (default: true)\n# - inactivityResetDays: Days without activity before reset (default: 7, range: 1-365)\n# - autoResetIntervalHours: How often to check for inactive shows in hours (default: 24, range: 1-168)\n\n# New User Defaults\nnewUserDefaultCanSync=true             # Default sync permission for new users\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);