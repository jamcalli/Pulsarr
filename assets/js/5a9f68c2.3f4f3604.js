"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[9925],{61845:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"utilities/public-content-notifications","title":"Public Content Notifications","description":"Configure community-wide notifications that broadcast content availability to shared channels, independent of individual user watchlists.","source":"@site/docs/utilities/public-content-notifications.md","sourceDirName":"utilities","slug":"/utilities/public-content-notifications","permalink":"/Pulsarr/docs/utilities/public-content-notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/utilities/public-content-notifications.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Plex Notifications","permalink":"/Pulsarr/docs/utilities/plex-notifications"},"next":{"title":"Architecture","permalink":"/Pulsarr/docs/architecture"}}');var t=s(74848),o=s(28453);const l={sidebar_position:5},r="Public Content Notifications",c={},d=[{value:"Quick Setup",id:"quick-setup",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Six Configuration Fields",id:"six-configuration-fields",level:3},{value:"Multiple Destinations per Field",id:"multiple-destinations-per-field",level:3},{value:"Layered Broadcasting",id:"layered-broadcasting",level:3},{value:"Service Dependencies",id:"service-dependencies",level:3},{value:"URL Examples",id:"url-examples",level:2},{value:"Discord Webhooks",id:"discord-webhooks",level:3},{value:"Apprise URLs",id:"apprise-urls",level:3},{value:"Multiple URLs",id:"multiple-urls",level:3},{value:"Supported Content Types",id:"supported-content-types",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Related Features",id:"related-features",level:2}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"public-content-notifications",children:"Public Content Notifications"})}),"\n",(0,t.jsx)(i.p,{children:"Configure community-wide notifications that broadcast content availability to shared channels, independent of individual user watchlists."}),"\n",(0,t.jsx)(i.h2,{id:"quick-setup",children:"Quick Setup"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Navigate"})," to Utilities \u2192 Public Content Notifications"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Enable"})," the feature toggle"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Configure"})," notification URLs:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Discord"}),": Add webhook URLs for Discord channels"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Apprise"}),": Add URLs for Slack, Telegram, email, etc."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Test"})," with new content releases"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Broadcast"})," availability to entire communities"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Independent"})," of individual watchlists"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Flexible"})," URL configuration with content-specific routing"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Automatic"})," @ mentions for interested Discord users"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Dashboard"})," integration for tracking delivery statistics"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(i.h3,{id:"six-configuration-fields",children:"Six Configuration Fields"}),"\n",(0,t.jsxs)(i.p,{children:["Public content notifications provide ",(0,t.jsx)(i.strong,{children:"maximum routing flexibility"})," with 6 fields:"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Discord Webhook Fields:"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Discord Webhook URLs"})," - General endpoints (all content)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Discord Webhook URLs (Movies)"})," - Movie-specific endpoints"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Discord Webhook URLs (Shows)"})," - TV show-specific endpoints"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Apprise Fields:"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Apprise URLs"})," - General endpoints (all content)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Apprise URLs (Movies)"})," - Movie-specific endpoints"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Apprise URLs (Shows)"})," - TV show-specific endpoints"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"multiple-destinations-per-field",children:"Multiple Destinations per Field"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Every field accepts comma-separated lists:"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Send to multiple Discord channels\nDiscord Webhook URLs: https://discord.com/api/webhooks/id1/token1,https://discord.com/api/webhooks/id2/token2\n\n# Send to multiple Apprise services  \nApprise URLs: slack://workspace/channel/token,mailto://admin@server.com,telegram://bot/chat\n"})}),"\n",(0,t.jsx)(i.h3,{id:"layered-broadcasting",children:"Layered Broadcasting"}),"\n",(0,t.jsxs)(i.p,{children:["Configure ",(0,t.jsx)(i.strong,{children:"both general AND specific URLs"})," for maximum reach:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# All content to main channel\nDiscord Webhook URLs: https://discord.com/api/webhooks/main-media/token1\n\n# Movies ALSO to movie enthusiasts (both fire for movies)\nDiscord Webhook URLs (Movies): https://discord.com/api/webhooks/movie-buffs/token2\n\n# Shows ALSO to TV channel (both fire for shows)  \nDiscord Webhook URLs (Shows): https://discord.com/api/webhooks/tv-releases/token3\n"})}),"\n",(0,t.jsx)(i.h3,{id:"service-dependencies",children:"Service Dependencies"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Discord"}),": Requires webhook URLs (Discord service can be disabled)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Apprise"}),": Requires Apprise service to be enabled"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Database"}),": Records are always created for tracking"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"url-examples",children:"URL Examples"}),"\n",(0,t.jsx)(i.h3,{id:"discord-webhooks",children:"Discord Webhooks"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"https://discord.com/api/webhooks/123456789/abcdef123456\n"})}),"\n",(0,t.jsx)(i.h3,{id:"apprise-urls",children:"Apprise URLs"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"discord://webhook_id/webhook_token\nslack://token_a/token_b/token_c\nmailto://user:pass@smtp.gmail.com\n"})}),"\n",(0,t.jsx)(i.h3,{id:"multiple-urls",children:"Multiple URLs"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"url1,url2,url3\n"})}),"\n",(0,t.jsx)(i.h2,{id:"supported-content-types",children:"Supported Content Types"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\u2705 ",(0,t.jsx)(i.strong,{children:"Movies"})," - Single movie releases"]}),"\n",(0,t.jsxs)(i.li,{children:["\u2705 ",(0,t.jsx)(i.strong,{children:"TV Shows"})," - Individual episodes and season packs"]}),"\n",(0,t.jsxs)(i.li,{children:["\u2705 ",(0,t.jsx)(i.strong,{children:"Bulk Releases"})," - Season-level notifications for multi-episode releases"]}),"\n",(0,t.jsxs)(i.li,{children:["\u274c ",(0,t.jsx)(i.strong,{children:"Tautulli"})," - Not supported (user-specific only)"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(i.p,{children:"The system gracefully handles:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Service outages"})," - Other notifications continue"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Invalid URLs"})," - Errors logged, processing continues"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Disabled services"})," - Clean degradation without crashes"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsxs)(i.p,{children:["For detailed configuration, examples, and troubleshooting, see the ",(0,t.jsx)(i.a,{href:"../notifications/public-content",children:"complete Public Content Notifications guide"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"related-features",children:"Related Features"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../notifications/discord",children:"Discord Notifications"})," - User-specific Discord setup"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../notifications/apprise",children:"Apprise Notifications"})," - User-specific Apprise setup"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"delete-sync",children:"Delete Sync"})," - Content lifecycle management"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);