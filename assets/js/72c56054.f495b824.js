"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[9677],{42237:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"features/multi-instance-support","title":"Multi-Instance Support","description":"Pulsarr provides comprehensive multi-instance support, allowing you to distribute and synchronize content across multiple Sonarr and Radarr instances with intelligent routing and automated synchronization.","source":"@site/docs/features/multi-instance-support.md","sourceDirName":"features","slug":"/features/multi-instance-support","permalink":"/Pulsarr/docs/features/multi-instance-support","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/features/multi-instance-support.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Content Routing","permalink":"/Pulsarr/docs/features/content-routing"},"next":{"title":"Approval and Quota System","permalink":"/Pulsarr/docs/features/approval-and-quota-system"}}');var s=i(74848),r=i(28453);const a={sidebar_position:2},c="Multi-Instance Support",o={},l=[{value:"Quick Setup",id:"quick-setup",level:2},{value:"Core Features",id:"core-features",level:2},{value:"Instance Configuration",id:"instance-configuration",level:2},{value:"Default Instance Behavior",id:"default-instance-behavior",level:3},{value:"Synced Instances Configuration",id:"synced-instances-configuration",level:3},{value:"Instance Sync Architecture",id:"instance-sync-architecture",level:3},{value:"Content Distribution Scenarios",id:"content-distribution-scenarios",level:2},{value:"Quality Tier Distribution",id:"quality-tier-distribution",level:3},{value:"Geographic Distribution",id:"geographic-distribution",level:3},{value:"User-Specific Libraries",id:"user-specific-libraries",level:3},{value:"Sync Operations",id:"sync-operations",level:2},{value:"Automatic Synchronization",id:"automatic-synchronization",level:3},{value:"Manual Synchronization",id:"manual-synchronization",level:3},{value:"Sync Process Flow",id:"sync-process-flow",level:3},{value:"Integration with Content Router",id:"integration-with-content-router",level:2},{value:"Notification Management",id:"notification-management",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Performance",id:"performance",level:3},{value:"Content Management",id:"content-management",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Example Configurations",id:"example-configurations",level:2},{value:"Simple Quality Tiers",id:"simple-quality-tiers",level:3},{value:"Multi-Target Distribution",id:"multi-target-distribution",level:3},{value:"API Reference",id:"api-reference",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"multi-instance-support",children:"Multi-Instance Support"})}),"\n",(0,s.jsx)(e.p,{children:"Pulsarr provides comprehensive multi-instance support, allowing you to distribute and synchronize content across multiple Sonarr and Radarr instances with intelligent routing and automated synchronization."}),"\n",(0,s.jsx)(e.h2,{id:"quick-setup",children:"Quick Setup"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["Navigate to ",(0,s.jsx)(e.strong,{children:"Sonarr"})," or ",(0,s.jsx)(e.strong,{children:"Radarr"})," in the settings"]}),"\n",(0,s.jsxs)(e.li,{children:["Configure your primary instance and toggle ",(0,s.jsx)(e.strong,{children:"Default Instance"})," to ",(0,s.jsx)(e.code,{children:"ON"})]}),"\n",(0,s.jsx)(e.li,{children:"Add secondary instances (the ones you want to sync to)"}),"\n",(0,s.jsxs)(e.li,{children:["Edit your default instance and select target instances from the ",(0,s.jsx)(e.strong,{children:"Synced Instances"})," dropdown"]}),"\n",(0,s.jsx)(e.li,{children:"Content added to the default instance will automatically sync to selected instances"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"core-features",children:"Core Features"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Instance Synchronization"}),": Automatically sync content between instances using configurable sync relationships and default instance behavior."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Content Distribution"}),": Send the same content to multiple instances simultaneously with different configurations (quality profiles, root folders, etc.)."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Sync Operations"}),": Manual and automated synchronization that respects content router rules and suppresses duplicate notifications."]}),"\n",(0,s.jsx)(e.h2,{id:"instance-configuration",children:"Instance Configuration"}),"\n",(0,s.jsx)(e.h3,{id:"default-instance-behavior",children:"Default Instance Behavior"}),"\n",(0,s.jsx)(e.p,{children:"Each instance type (Sonarr/Radarr) can have one designated default instance:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Routing Target"}),": Content can route to the default instance through routing rules or as a fallback"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Automatic Sync"}),": When content hits the default instance, it automatically syncs to all configured secondary instances"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Sync Authority"}),": Only the default instance can sync content to other instances"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"synced-instances-configuration",children:"Synced Instances Configuration"}),"\n",(0,s.jsxs)(e.p,{children:["Only the default instance has a ",(0,s.jsx)(e.strong,{children:"Synced Instances"})," dropdown where you select which instances should receive synced content."]}),"\n",(0,s.jsx)(e.p,{children:"When you select instances in this dropdown, content added to the default instance will automatically sync to those selected instances using their respective configurations (quality profiles, root folders, etc.)."}),"\n",(0,s.jsx)(e.h3,{id:"instance-sync-architecture",children:"Instance Sync Architecture"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Default Instance \u2192 Syncs to: [Instance 2, Instance 3, Instance 5]\nInstance 2 \u2192 Cannot sync (not default)\nInstance 3 \u2192 Cannot sync (not default) \nInstance 5 \u2192 Cannot sync (not default)\n"})}),"\n",(0,s.jsx)(e.p,{children:"Non-default instances cannot sync content to other instances - they can only receive synced content from the default instance."}),"\n",(0,s.jsx)(e.h2,{id:"content-distribution-scenarios",children:"Content Distribution Scenarios"}),"\n",(0,s.jsx)(e.h3,{id:"quality-tier-distribution",children:"Quality Tier Distribution"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Use Case"}),": Maintain the same content across different quality tiers."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Setup"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Default Instance: Standard quality profiles"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 1: High-quality 4K profiles"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 2: Archive/lower quality profiles"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Result"}),": All content appears in three instances with appropriate quality settings for each tier."]}),"\n",(0,s.jsx)(e.h3,{id:"geographic-distribution",children:"Geographic Distribution"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Use Case"}),": Distribute content across different servers or locations."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Setup"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Default Instance: Primary server"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 1: Backup server"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 2: Remote location server"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Result"}),": Content redundancy across multiple locations with automatic synchronization."]}),"\n",(0,s.jsx)(e.h3,{id:"user-specific-libraries",children:"User-Specific Libraries"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Use Case"}),": Maintain separate libraries for different user groups while sharing popular content."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Setup"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Default Instance: General content library"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 1: Kids/family content library"}),"\n",(0,s.jsx)(e.li,{children:"Sync Target 2: Adult content library"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Result"}),": Popular content appears in all libraries, while specific content routes to appropriate libraries."]}),"\n",(0,s.jsx)(e.h2,{id:"sync-operations",children:"Sync Operations"}),"\n",(0,s.jsx)(e.h3,{id:"automatic-synchronization",children:"Automatic Synchronization"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Default Instance Sync"}),": When content is added to the default instance, it automatically syncs to all configured secondary instances using their specific settings."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Router-Aware Sync"}),": Sync operations use the content router to determine appropriate target instances rather than blind copying."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Notification Suppression"}),": Duplicate notifications are automatically suppressed during sync operations to prevent notification spam."]}),"\n",(0,s.jsx)(e.h3,{id:"manual-synchronization",children:"Manual Synchronization"}),"\n",(0,s.jsx)(e.p,{children:"Manual sync operations are available for:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Specific Instance Sync"}),": Sync content from one instance to its configured targets"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Full Library Sync"}),": Sync all instances to ensure consistency"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Progress Tracking"}),": Real-time progress monitoring during sync operations"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"sync-process-flow",children:"Sync Process Flow"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Source Detection"}),": Identify content in source instance"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Router Evaluation"}),": Use content router rules to determine target instances"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Target Configuration"}),": Apply target instance's quality profiles, root folders, and tags"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Status Tracking"}),": Update sync status to prevent duplicate notifications"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Batch Processing"}),": Process multiple items efficiently"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Completion Verification"}),": Ensure sync completed successfully"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"integration-with-content-router",children:"Integration with Content Router"}),"\n",(0,s.jsx)(e.p,{children:"Multi-instance support works seamlessly with content routing:"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Rule-Based Distribution"}),": Content router rules can send content to multiple instances simultaneously based on different criteria."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Priority Handling"}),": When multiple rules target the same instance, the highest priority rule determines the instance configuration (quality profile, root folder, etc.)."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Sync Compliance"}),": Manual sync operations respect content router rules instead of performing blind content copying."]}),"\n",(0,s.jsx)(e.h2,{id:"notification-management",children:"Notification Management"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Sync Detection"}),": The system automatically detects when content is being synced between instances."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Notification Suppression"}),": Duplicate notifications are suppressed during sync operations to prevent spam."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Status Tracking"}),": Per-instance status tracking ensures users only receive notifications when content is genuinely available."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Webhook Processing"}),": Intelligent webhook processing distinguishes between new content and synced content."]}),"\n",(0,s.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(e.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Designate one instance per type as the default for predictable routing behavior"}),"\n",(0,s.jsx)(e.li,{children:"Configure sync relationships based on your content distribution strategy"}),"\n",(0,s.jsx)(e.li,{children:"Use different quality profiles and root folders for each target instance"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"performance",children:"Performance"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Monitor sync operations during initial setup to ensure proper performance"}),"\n",(0,s.jsx)(e.li,{children:"Consider batch processing for large library synchronizations"}),"\n",(0,s.jsx)(e.li,{children:"Use appropriate polling intervals for large instance configurations"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"content-management",children:"Content Management"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Leverage content router rules for automated distribution"}),"\n",(0,s.jsx)(e.li,{children:"Use sync operations for manual library maintenance"}),"\n",(0,s.jsx)(e.li,{children:"Regularly verify sync status across instances"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Content not syncing between instances:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Verify the default instance has target instances selected in ",(0,s.jsx)(e.strong,{children:"Synced Instances"})," dropdown"]}),"\n",(0,s.jsx)(e.li,{children:"Check that target instances are online and accessible"}),"\n",(0,s.jsx)(e.li,{children:"Review logs for sync operation errors"}),"\n",(0,s.jsx)(e.li,{children:"Ensure target instances have valid quality profiles and root folders"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Duplicate notifications:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Verify notification suppression is enabled for sync operations"}),"\n",(0,s.jsx)(e.li,{children:"Check webhook processing status in logs"}),"\n",(0,s.jsx)(e.li,{children:"Confirm sync detection is working properly"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Sync operations failing:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Verify all instances have correct API keys and URLs"}),"\n",(0,s.jsx)(e.li,{children:"Check target instance has sufficient storage space"}),"\n",(0,s.jsx)(e.li,{children:"Review content router rules for conflicts"}),"\n",(0,s.jsx)(e.li,{children:"Ensure network connectivity between instances"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Wrong instance receiving content:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Review content router rule priorities"}),"\n",(0,s.jsx)(e.li,{children:"Verify default instance designation"}),"\n",(0,s.jsx)(e.li,{children:"Check synced instances selection in default instance settings"}),"\n",(0,s.jsx)(e.li,{children:"Confirm router rules are evaluating correctly"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"example-configurations",children:"Example Configurations"}),"\n",(0,s.jsx)(e.h3,{id:"simple-quality-tiers",children:"Simple Quality Tiers"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Default Sonarr (HD) \u2192 Sync to:\n\u251c\u2500\u2500 4K Sonarr (Ultra HD profiles)\n\u2514\u2500\u2500 Archive Sonarr (Compressed profiles)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"multi-target-distribution",children:"Multi-Target Distribution"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Default Sonarr \u2192 Syncs to:\n\u251c\u2500\u2500 Family Sonarr\n\u251c\u2500\u2500 Archive Sonarr\n\u251c\u2500\u2500 Kids Sonarr\n\u2514\u2500\u2500 Backup Sonarr\n"})}),"\n",(0,s.jsx)(e.p,{children:"This powerful multi-instance architecture enables sophisticated content distribution strategies while maintaining automated synchronization and intelligent notification handling."}),"\n",(0,s.jsx)(e.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsxs)(e.p,{children:["See the ",(0,s.jsx)(e.a,{href:"/docs/api/sync-all-instances",children:"Sync API documentation"})," for programmatic instance synchronization and the ",(0,s.jsx)(e.a,{href:"/docs/api/sonarr",children:"Sonarr"})," and ",(0,s.jsx)(e.a,{href:"/docs/api/radarr",children:"Radarr"})," APIs for instance management."]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);