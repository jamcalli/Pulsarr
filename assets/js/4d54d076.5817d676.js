"use strict";(self.webpackChunk_watchlist_v2_docs=self.webpackChunk_watchlist_v2_docs||[]).push([[1459],{2199:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"contributing","title":"Contributing","description":"We welcome contributions to Pulsarr! This section outlines the process for contributing to the project.","source":"@site/docs/contributing.md","sourceDirName":".","slug":"/contributing","permalink":"/Pulsarr/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/jamcalli/pulsarr/edit/main/docs/docs/contributing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/Pulsarr/docs/architecture"},"next":{"title":"Introduction","permalink":"/Pulsarr/docs/api/pulsarr-api"}}');var r=s(74848),t=s(28453);const l={sidebar_position:7},o="Contributing",c={},d=[{value:"Fork and Branch Naming",id:"fork-and-branch-naming",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Commit Message Guidelines",id:"commit-message-guidelines",level:2},{value:"Format",id:"format",level:3},{value:"Types",id:"types",level:3},{value:"Examples",id:"examples",level:3},{value:"Guidelines",id:"guidelines",level:3},{value:"API Development",id:"api-development",level:2},{value:"Pull Request Guidelines",id:"pull-request-guidelines",level:2},{value:"Questions?",id:"questions",level:2},{value:"Contributors",id:"contributors",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,r.jsx)(n.p,{children:"We welcome contributions to Pulsarr! This section outlines the process for contributing to the project."}),"\n",(0,r.jsx)(n.h2,{id:"fork-and-branch-naming",children:"Fork and Branch Naming"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fork the Repository"}),": Start by forking the Pulsarr repository to your GitHub account."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Branch Naming Conventions"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For new features: ",(0,r.jsx)(n.code,{children:"features/your-feature-name"})]}),"\n",(0,r.jsxs)(n.li,{children:["For bug fixes: ",(0,r.jsx)(n.code,{children:"bug-fix/brief-bug-description"})]}),"\n",(0,r.jsxs)(n.li,{children:["For documentation: ",(0,r.jsx)(n.code,{children:"docs/what-you-are-documenting"})]}),"\n",(0,r.jsxs)(n.li,{children:["For performance improvements: ",(0,r.jsx)(n.code,{children:"perf/what-you-are-improving"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a Branch"}),": Create a new branch following the naming conventions above."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Make Your Changes"}),": Implement your feature or fix the bug."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Write Tests"}),": If applicable, write tests for your changes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ensure Code Quality"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Run linting tools (npm run fix to run biome)"}),"\n",(0,r.jsx)(n.li,{children:"Ensure tests pass (these are coming!)"}),"\n",(0,r.jsx)(n.li,{children:"Follow the existing code style"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Commit Your Changes"}),": Follow our commit message guidelines (see below)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Push to Your Fork"}),": Push your changes to your forked repository."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Submit a Pull Request"}),": Create a pull request from your branch to the develop branch of the main Pulsarr repository."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"commit-message-guidelines",children:"Commit Message Guidelines"}),"\n",(0,r.jsxs)(n.p,{children:["This project follows ",(0,r.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commits"})," with automated linting via commitlint."]}),"\n",(0,r.jsx)(n.h3,{id:"format",children:"Format"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<type>: <description>\n\n[optional body]\n\n[optional footer(s)]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"feat:"})," - New features or functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fix:"})," - Bug fixes or corrections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"refactor:"})," - Code refactoring without functional changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docs:"})," - Documentation updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"style:"})," - Code style changes (formatting, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"test:"})," - Adding or updating tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"chore:"})," - Maintenance tasks"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Feature addition\nfeat: add multi-instance support for content distribution\n\n# Bug fix\nfix: filter users to include only those with sync enabled\n\n# Documentation\ndocs: update installation guide with PostgreSQL setup\n\n# Refactoring\nrefactor: centralize notification processing logic\n"})}),"\n",(0,r.jsx)(n.h3,{id:"guidelines",children:"Guidelines"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use lowercase for type and description"}),"\n",(0,r.jsx)(n.li,{children:"Keep description under 72 characters"}),"\n",(0,r.jsx)(n.li,{children:'Use present tense ("add" not "added")'}),"\n",(0,r.jsx)(n.li,{children:"Be specific and descriptive"}),"\n",(0,r.jsxs)(n.li,{children:["Reference issues when applicable: ",(0,r.jsx)(n.code,{children:"fixes #123"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-development",children:"API Development"}),"\n",(0,r.jsx)(n.p,{children:"When adding or modifying API endpoints:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Schemas"}),": Ensure all request/response schemas are properly defined using Zod"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add OpenAPI Tags"}),": Include appropriate tags and descriptions in your route definitions"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The OpenAPI documentation will be automatically generated during the CI build process, so no manual generation is required."}),"\n",(0,r.jsx)(n.h2,{id:"pull-request-guidelines",children:"Pull Request Guidelines"}),"\n",(0,r.jsx)(n.p,{children:"When submitting a pull request, please:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Describe Your Changes"}),": Provide a clear description of what the changes accomplish."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Link Related Issues"}),': If your PR addresses an open issue, reference it using the GitHub issue linking syntax (e.g., "Fixes #123").']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Include Screenshots"}),": If your changes include visual elements, add screenshots to help reviewers understand the context."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Update Documentation"}),": Ensure that documentation is updated to reflect your changes if necessary."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Be Responsive"}),": Be prepared to address feedback and make requested changes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"questions",children:"Questions?"}),"\n",(0,r.jsxs)(n.p,{children:["If you have any questions about contributing, feel free to ",(0,r.jsx)(n.a,{href:"https://github.com/jamcalli/pulsarr/issues",children:"open an issue"}),' with the label "question".']}),"\n",(0,r.jsx)(n.h2,{id:"contributors",children:"Contributors"}),"\n",(0,r.jsxs)(n.p,{children:["See all ",(0,r.jsx)(n.a,{href:"https://github.com/jamcalli/pulsarr/graphs/contributors",children:"contributors"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);